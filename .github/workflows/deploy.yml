name: Deploy via Git Clone on EC2

on:
  push:
    branches:
      - main  # main 브랜치에 push 될 때마다 배포 실행

jobs:
  deploy:
    runs-on: ubuntu-latest  # 깃허브 액션이 사용할 가상환경 지정

    steps:
    - name: Decode PEM key  # EC2 접속을 위한 PEM 키 복호화
      run: |
        echo "${{ secrets.EC2_KEY }}" | base64 -d > ec2-key.pem
        chmod 600 ec2-key.pem

    - name: SSH and Deploy
      run: |
        ssh -i ec2-key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'

          # 패키지 설치
          sudo apt update
          sudo apt install -y openjdk-21-jdk git

          # 프로젝트 없으면 clone
          if [ ! -d "M3-Diary" ]; then
            git clone https://github.com/${{ secrets.REPO_URL }} M3-Diary
          fi

          cd M3-Diary

          # .env 충돌 방지
          git restore --staged .env || true
          git checkout -- .env || true
          git update-index --assume-unchanged .env

          # 최신 코드 반영
          git pull origin main

          # 빌드 전 정리
          rm -rf build
          rm -f app.log

          # 빌드
          chmod +x ./gradlew
          ./gradlew clean build -x test

          # 빌드 성공 후에만 JAR 백업
          if [ -f build/libs/M3-Diary-0.0.1-SNAPSHOT.jar ]; then
            mkdir -p ~/backup
            cp build/libs/M3-Diary-0.0.1-SNAPSHOT.jar ~/backup/prev.jar
          fi

          # 기존 서버 종료
          pkill -f 'java -jar' || true

          # 새 서버 실행
          nohup java -jar build/libs/M3-Diary-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          sleep 3

          # ✅ 헬스체크 루프 (최대 30초, 3초 간격)
          for i in {1..10}; do
            if curl -s --fail http://localhost:8080/health; then
              echo "✅ 서버 활성화됨" >> app.log
              break
            else
              echo "⏳ 서버 기동 대기 중... ($i/10)" >> app.log
              sleep 3
            fi
          done

          # 마지막 헬스체크 실패 시 롤백
          if ! curl -s --fail http://localhost:8080/health; then
            echo "❌ 배포 실패. 롤백 중..." >> app.log
            pkill -f 'java -jar' || true
            nohup java -jar ~/backup/prev.jar > app.log 2>&1 &
            echo "🔁 이전 버전으로 롤백됨" >> app.log
          fi

          # 로그 출력
          tail -n 100 app.log

        EOF
